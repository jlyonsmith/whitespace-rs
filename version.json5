{
  vars: {
    major: 3,
    minor: 0,
    patch: 0,
    build: 20210905,
    revision: 0,
  },
  calcVars: {
    nextBuild: "build + 1",
  },
  operations: {
    incrMajor: "major += 1; minor = 0; patch = 0; revision = 0; build = nextBuild",
    incrMinor: "minor += 1; patch = 0; revision = 0; build = nextBuild",
    incrPatch: "patch += 1; revision = 0; build = nextBuild",
    incrBuild: "build = nextBuild",
  },
  targets: [
    {
      description: "Cargo Package",
      files: ["Cargo.toml"],
      updates: [
        {
          search: '^(?P<begin>version\\s*=\\s*")\\d+\\.\\d+\\.\\d+(?P<end>"\\s*)$',
          replace: 'begin + str::from(major) + "." + str::from(minor) + "." + str::from(patch) + end',
        },
      ],
    },
    {
      description: "Rust Clap Version",
      files: ["src/bin/ender.rs", "src/bin/spacer.rs"],
      updates: [
        {
          search: '^(?P<begin>\\s+\\.version\\(")\\d+\\.\\d+\\.\\d+\\+\\d+\\.\\d+(?P<end>"\\))$',
          replace: 'begin + str::from(major) + "." + str::from(minor) + "." + str::from(patch) + "+" + str::from(build) + "." + str::from(revision) + end',
        },
      ],
    },
    {
      description: "Git Tag Name",
      files: ["scratch/version.tag.txt"],
      write: 'str::from(major) + "." + str::from(minor) + "." + str::from(patch)',
    },
    {
      description: "Git Tag Description",
      files: ["scratch/version.desc.txt"],
      write: '"Version " + str::from(major) + "." + str::from(minor) + "." + str::from(patch) + "+" + str::from(build) + "." + str::from(revision)',
    },
  ],
}
